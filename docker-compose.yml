version: '3.8'

services:
  # Main development service
  dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000" # Main application
      - "9229:9229" # Debug port
    environment:
      - NODE_ENV=development
      - DEBUG=true
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  # Test runner service
  test:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=test
      - JEST_JUNIT_OUTPUT_DIR=/app/test-results
    command: npm run test:watch

  # Performance monitoring service
  perf:
    build:
      context: .
      dockerfile: Dockerfile
      target: performance
    volumes:
      - .:/app
      - ./tests/performance:/app/performance
      - ./performance-results:/app/results
    environment:
      - PYTHONUNBUFFERED=1
    command: python -m pytest performance/ --benchmark-only

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  node_modules:
  performance-results:

# Development tools and settings
x-development:
  ide:
    vscode:
      extensions:
        - dbaeumer.vscode-eslint
        - esbenp.prettier-vscode
        - ms-python.python
  git:
    hooks:
      pre-commit: npm run lint && npm run test
  npm:
    scripts:
      dev: "nodemon --inspect=0.0.0.0:9229 src/index.js"
      test: "jest --coverage"
      lint: "eslint src/**/*.js"